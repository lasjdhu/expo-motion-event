name: Release Management

on:
  push:
    branches: ["main"]

jobs:
  release:
    if: "!contains(github.event.head_commit.message, 'chore(release): bump version')"
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run Prettier check
        run: npm run style:check

      - name: Run ESLint
        run: npm run lint

      - name: Run TypeScript check
        run: npm run ts:check

      - name: Install changelog tools
        run: |
          npm install -g conventional-changelog-cli
          npm install -g conventional-recommended-bump
          npm install -g conventional-changelog-angular

      - name: Get version bump type
        id: bump
        run: echo "bump=$(conventional-recommended-bump -p angular)" >> $GITHUB_OUTPUT

      - name: Bump version
        run: |
          npm version ${{ steps.bump.outputs.bump }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")

          npm install --package-lock-only

          if [ -f "android/build.gradle" ]; then
            sed -i "s/version = '.*'/version = '$NEW_VERSION'/" android/build.gradle
            sed -i "s/versionName \".*\"/versionName \"$NEW_VERSION\"/" android/build.gradle
            VERSION_CODE=$((10000 * $(echo $NEW_VERSION | cut -d. -f1) + 100 * $(echo $NEW_VERSION | cut -d. -f2) + $(echo $NEW_VERSION | cut -d. -f3)))
            sed -i "s/versionCode .*/versionCode $VERSION_CODE/" android/build.gradle
          fi

      - name: Generate changelog
        run: |
          conventional-changelog -p angular -i CHANGELOG.md -s

      - name: Commit, tag, and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          VERSION=$(node -p "require('./package.json').version")
          git add package.json package-lock.json CHANGELOG.md
          git commit -m "chore(release): bump version $VERSION"
          git tag v$VERSION
          git push origin main --tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
